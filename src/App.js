import React, {Component} from "react";

class App extends Component {

   constructor (props) {
    super(props);

    this.state = {

      horas: "00:00:00"
    }
   }


   /* Ciclos de vida dos component
      component Did Mount; Montou
      component Did update; Ser√° desmontado
      component Will Unmount; Foi atualizado
      should component Update;deve atualizar o comp
      component Did Catch; comp pegou
     */


      /* O m√©todo componentDidMount() nos permite executar c√≥digo em React quando o componente j√° est√° inserido no DOM (Modelo de Objeto de Documento). Ele √© chamado durante a fase de montagem do ciclo de vida do React, ou seja, ap√≥s o componente ser renderizado12.

Aqui est√£o os detalhes sobre o componentDidMount():

Quando √© chamado?
O componentDidMount() √© invocado imediatamente ap√≥s a renderiza√ß√£o inicial do componente.
√â uma oportunidade para executar tarefas que dependem da presen√ßa do componente no DOM.

Importante:
Use o componentDidMount() para inicializar dados, fazer requisi√ß√µes √† API, configurar eventos ou interagir com o DOM.
Evite atualizar o estado do componente dentro deste m√©todo, pois pode causar um loop infinito de renderiza√ß√£o.
Em resumo, o componentDidMount() √© uma ferramenta poderosa para executar c√≥digo ap√≥s a renderiza√ß√£o inicial de um componente React. üöÄüåü



*/

   componentDidMount(){
    setInterval(() => {
      //Atualizar state
      this.setState( {horas: new Date ().toLocaleTimeString()} )
    }, 1000);    
   }

   /* Quando √© chamado?
O componentDidUpdate() √© invocado imediatamente ap√≥s uma atualiza√ß√£o do componente.
N√£o √© chamado durante a renderiza√ß√£o inicial.
√â uma oportunidade para interagir com o DOM quando o componente foi atualizado.
Uso Comum:
O componentDidUpdate() √© √∫til para executar a√ß√µes ap√≥s mudan√ßas no estado ou nas propriedades.
Por exemplo, voc√™ pode fazer requisi√ß√µes √† API quando as propriedades passadas para o componente mudam. 

Importante:
Lembre-se de n√£o causar efeitos colaterais no render() ou no componentDidUpdate(), pois isso pode levar a problemas de performance ou comportamento inesperado.
Se voc√™ precisar limpar recursos (como cancelar assinaturas ou tarefas ass√≠ncronas), fa√ßa isso no componentWillUnmount().
Em resumo, o componentDidUpdate() √© uma ferramenta poderosa para interagir com o DOM e executar a√ß√µes espec√≠ficas ap√≥s atualiza√ß√µes em componentes React. üöÄüîÑ
*/
   componentDidUpdate() {
    /* console.log("Atualizando") */
   }

   
   /* Este m√©todo retorna um booleano que indica se o React deve continuar com a renderiza√ß√£o ou n√£o. Se shouldComponentUpdate() retornar false, ent√£o render() ser√° completamente ignorado at√© que as pr√≥ximas props ou state sejam alteradas. Al√©m disso, componentWillUpdate() e componentDidUpdate() tamb√©m n√£o ser√£o invocados. */
   
   shouldComponentUpdate() {
    
   }







  render() {
    return (
      <div>
        <h1> Relogio : {this.state.horas} </h1>      
      </div>
    )
  }
}



export default App